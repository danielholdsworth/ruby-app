version: 2.1

orbs:
  ruby: circleci/ruby@1.2.0
  heroku: circleci/heroku@1.2.6
  docker: circleci/docker@2.0.1
  queue: eddiewebb/queue@1.6.5

parameters:
  deploy:
    type: boolean
    default: false

jobs:
  build:
    docker:
      - image: circledan/rubybundler:latest
    executor: ruby/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - asset-cache-v2-{{ arch }}-{{ .Branch }}
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/install-deps:
          with-cache: true
          key: asset-cache-v2-{{ arch }}-{{ .Branch }}
      - save_cache:
          name: Save Gemfile Cache
          key: asset-cache-v2-{{ arch }}-{{ .Branch }}-{{ epoch }}
          paths:
            - ~/.cache/gem

  unit-test:
    docker:
      - image: circledan/rubybundler:latest
      - image: cimg/postgres:14.1

    executor: ruby/default
    steps:
      - checkout
      - restore_cache:
          name: Restore Gem Cache
          keys: 
            - v1-{{ checksum "Gemfile.lock" }}
            - v1- 
      - run:
          name: bundle install
          command: bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Set up DB
          command: rails db:create
      - run:
          name: Run webpack install
          command: rm bin/webpack*; rm config/webpacker.yml; rails webpacker:install
      - run:
          command: >
            mkdir -p unit-test

            bundle exec rspec spec/views --profile 10 --format RspecJunitFormatter 
            --out unit-test/results.xml --format progress
          name: Rspec views
      - store_test_results:
          path: unit-test/
      - store_artifacts:
          destination: unit-results
          path: unit-test/
      - run:
          name: run rubocop
          command: rubocop . --out check-results.xml || true
      - store_artifacts:
          path: coverage/
      - store_artifacts:
          path: check-results.xml
      - save_cache:
          name: Save Gemfile Cache
          key: v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.cache/gem

  lint:
    docker:
      - image: circledan/rubybundler:latest

    executor: ruby/default
    steps:
      - checkout
      - restore_cache:
          name: Restore Gem Cache
          keys: 
            - v1-{{ checksum "Gemfile.lock" }}
            - v1- 
      - run: bundle install
      - run:
          name: run rubocop
          command: rubocop . --out check-results.xml || true
      - save_cache:
          name: Save Gemfile Cache
          key: v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.cache/gem
      - store_artifacts:
          path: check-results.xml

  browser-test:
    docker:
      - image: circledan/rubybundler:latest
      - image: cimg/postgres:14.1

    executor: ruby/default
    steps:
      - run:
          name: rm package-lock
          command: rm -rf package-lock.json
      - checkout
      - run:
          name: bundle install
          command: bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Set up DB
          command: rails db:create
      - run:
          name: Run webpack install
          command: rm bin/webpack*; rm config/webpacker.yml; rails webpacker:install
      - run:
          command: >
            mkdir -p web-test

            bundle exec rspec spec/features --profile 10 --format RspecJunitFormatter 
            --out web-test/results.xml --format progress
          name: Rspec features
      - store_test_results:
          path: web-test/
      - store_artifacts:
          destination: web-results
          path: web-test/

  deploy:
    docker:
      - image: circledan/rubybundler:latest
    executor: ruby/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          api-key: MY_HEROKU_API 
      - run:
          name: migrate db
          command: heroku run rake db:migrate --app circleciruby

  param-test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run: sh param.sh

workflows:
  ruby-app-build&test:
    when:
      not: << pipeline.parameters.deploy >>
    jobs:
      - queue/block_workflow:
          only-on-branch: master
      - param-test 
      - build:
          requires:
            - param-test
      - unit-test:
          requires:
            - build
      - lint:
          requires:
            - build
      - browser-test:
          requires:
            - build

  ruby-app-full:
    when: << pipeline.parameters.deploy >>
    jobs:
      - queue/block_workflow:
          only-on-branch: master 
      - build
      - unit-test:
          requires:
            - build
      - lint:
          requires:
            - build
      - browser-test:
          requires:
            - build
      - deploy:
          context:
            - dan
          requires:
            - queue/block_workflow
            - unit-test
            - lint
            - browser-test
          filters:
            branches:
              only: master
