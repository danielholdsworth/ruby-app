version: 2.1

orbs:
  ruby: circleci/ruby@1.2.0
  heroku: circleci/heroku@1.2.6

jobs:
  build:
    docker:
      - image: ruby:3.0.2-buster
    executor: ruby/default
    steps:
      - checkout
      - restore_cache:
          name: Restore Gem Cache
          keys: 
            - m1-{{ checksum "Gemfile.lock" }}
            - m1- 
      - run:
          name: install bundle
          command: gem install bundler:2.2.22
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/install-deps
      - save_cache:
          name: Save Gemfile Cache
          key: m1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.cache/gem

  unit-test:
    docker:
      - image: ruby:3.0.2-buster
      - image: cimg/postgres:14.1

    executor: ruby/default
    steps:
      - checkout
      - run:
          name: install rails
          command: gem install rails:6.1.4.1
      - run: 
          name: install rails
          command: gem install rails
      - ruby/install-deps
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz && rm dockerize-linux-amd64-v0.6.1.tar.gz
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Set up DB
          command: rails db:create
      - run:
          name: Install node
          command: apt update; apt install nodejs -y
      - run:
          name: Run webpack install
          command: rails webpacker:install
      - run:
          name: run unit test
          command: rails test

  deploy:
    docker:
      - image: cimg/ruby:3.0.2
    executor: ruby/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git
      - run:
          name: migrate db
          command: heroku run rake db:migrate --app circleciruby

workflows:
  ruby-app:
    jobs:
      - build
      - unit-test:
          requires:
            - build
      - deploy:
          requires:
            - unit-test
          filters:
            branches:
              only: master